// Generated by CoffeeScript 1.8.0
var StylesheetHandle;

StylesheetHandle = (function() {
  var Temp, instance;

  function StylesheetHandle() {}

  instance = null;

  StylesheetHandle.get = function() {
    if (instance == null) {
      instance = new Temp();
    }
    return instance;
  };

  Temp = (function() {
    function Temp() {
      var styleEl;
      styleEl = document.createElement('style');
      document.head.appendChild(styleEl);
      styleEl.appendChild(document.createTextNode(''));
      this.handleSheet = styleEl.sheet;
      this.historyStack = [];
    }

    Temp.prototype.insert = function(objId, cssCode) {
      var insertIndex;
      insertIndex = this.handleSheet.cssRules.length;
      this.handleSheet.insertRule(cssCode, insertIndex);
      return this.historyStack[insertIndex] = objId;
    };

    Temp.prototype.remove = function(objId) {
      var h, i, index, insertIndex, _i, _j, _len, _ref, _ref1;
      insertIndex = null;
      _ref = this.historyStack;
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        h = _ref[index];
        if (h === objId) {
          insertIndex = index;
          break;
        }
      }
      if (insertIndex === null) {
        return;
      }
      this.handleSheet.deleteRule(insertIndex);
      for (i = _j = insertIndex, _ref1 = this.historyStack.length - 2; insertIndex <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = insertIndex <= _ref1 ? ++_j : --_j) {
        this.historyStack[i] = this.historyStack[i + 1];
      }
      return this.historyStack.pop();
    };

    return Temp;

  })();

  return StylesheetHandle;

})();

//# sourceMappingURL=stylesheet_handle.js.map
