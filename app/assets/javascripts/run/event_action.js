// Generated by CoffeeScript 1.9.2
var EventAction;

EventAction = (function() {
  function EventAction(chapterList) {
    this.chapterList = chapterList;
    this.chapterIndex = 0;
    this.finished = false;
  }

  EventAction.prototype.thisChapter = function() {
    return this.chapterList[this.chapterIndex];
  };

  EventAction.prototype.start = function() {
    this.sinkFrontAllChapterObj();
    return this.thisChapter().willChapter();
  };

  EventAction.prototype.nextChapterIfFinishedAllEvent = function() {
    if (this.thisChapter().finishedAllEvent()) {
      return this.nextChapter();
    }
  };

  EventAction.prototype.nextChapter = function() {
    this.thisChapter().didChapter();
    this.chapterIndex += 1;
    if (this.chapterList.length <= this.chapterIndex) {
      return this.finishAllEvents();
    } else {
      return this.thisChapter().willChapter();
    }
  };

  EventAction.prototype.backChapter = function() {
    this.resetChapter(this.chapterIndex);
    if (this.chapterIndex > 0) {
      this.chapterIndex -= 1;
      return this.thisChapter().focusToActorIfNeed(false);
    }
  };

  EventAction.prototype.resetChapter = function(chapterIndex) {
    return this.chapterList[chapterIndex].reset();
  };

  EventAction.prototype.handleScrollEvent = function(x, y) {
    if (!this.finished && this.isScrollChapter()) {
      return this.thisChapter().scrollEvent(x, y);
    }
  };

  EventAction.prototype.isScrollChapter = function() {
    return this.thisChapter().scrollEvent != null;
  };

  EventAction.prototype.sinkFrontAllChapterObj = function() {
    scrollHandleWrapper.css('z-index', scrollViewSwitchZindex.on);
    scrollContents.css('z-index', scrollViewSwitchZindex.off);
    return this.chapterList.forEach(function(chapter) {
      return chapter.eventObjList.forEach(function(event) {
        if (event.event[EventPageValueBase.PageValueKey.IS_COMMON_EVENT] === false) {
          return event.getJQueryElement().css('z-index', Constant.Zindex.EVENTBOTTOM + chapter.num);
        }
      });
    });
  };

  EventAction.prototype.finishAllEvents = function() {
    this.finished = true;
    return console.log('Finish!');
  };

  return EventAction;

})();

//# sourceMappingURL=event_action.js.map
