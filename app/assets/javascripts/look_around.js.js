// Generated by CoffeeScript 1.8.0
var initCommonVar, initResize, initScroll, initScrollPoint, initTimeline, initView;

initCommonVar = function() {
  window.wrap = $('#main-wrapper');
  window.contents = $("#scroll_wrapper");
  window.scrollContents = $("#scroll_contents");
  window.inside = $("#scroll_inside");
  window.distX = 0;
  window.distY = 0;
  window.scrollViewMag = 1000;
  window.resizeTimer = false;
  window.timeLine = null;
  return window.scrollViewZindex = 1000;
};

initView = function() {
  $('#canvas_container').attr('width', $('#canvas_wrapper').width());
  $('#canvas_container').attr('height', $('#canvas_wrapper').height());
  contents.css('z-index', scrollViewZindex);
  inside.width(scrollContents.width() * (scrollViewMag + 1));
  return inside.height(scrollContents.height() * (scrollViewMag + 1));
};

initResize = function(wrap, contents) {
  var resizeTimer;
  resizeTimer = false;
  return $(window).resize(function() {
    if (resizeTimer !== false) {
      clearTimeout(resizeTimer);
    }
    return resizeTimer = setTimeout(function() {
      var h;
      h = $(window).height();
      wrap.height(h);
      return contents.height(h);
    }, 200);
  });
};

initTimeline = function() {
  var chapterList, objList;
  window.lstorage = localStorage;
  objList = JSON.parse(lstorage.getItem('timelineObjList'));
  chapterList = [];
  objList.forEach(function(obj) {
    var actorList, chapter, item, miniObj;
    actorList = [];
    miniObj = obj.miniObj;
    if (miniObj.itemType === Constant.ItemType.BUTTON) {
      item = new ButtonItem();
      item.setMiniumObject(miniObj);
      item.reDraw();
    } else if (miniObj.itemType === Constant.ItemType.ARROW) {
      item = new ArrowItem();
    }
    item.initActor(miniObj, obj.actorSize, obj.sEvent, obj.cEvent);
    actorList.push(item);
    if (miniObj.itemType === Constant.ItemType.BUTTON) {
      chapter = new ClickChapter(actorList);
    } else if (miniObj.itemType === Constant.ItemType.ARROW) {
      chapter = new ScrollChapter(actorList);
    }
    return chapterList.push(chapter);
  });
  return window.timeLine = new TimeLine(chapterList);
};

initScrollPoint = function() {
  scrollContents.scrollLeft(scrollContents.width() * (scrollViewMag * 0.5));
  return scrollContents.scrollTop(scrollContents.height() * (scrollViewMag * 0.5));
};

initScroll = function() {
  var lastLeft, lastTop, scrollFinished, stopTimer;
  lastLeft = scrollContents.scrollLeft();
  lastTop = scrollContents.scrollTop();
  stopTimer = null;
  scrollContents.scroll(function() {
    var distX, distY, x, y;
    x = $(this).scrollLeft();
    y = $(this).scrollTop();
    if (stopTimer !== null) {
      clearTimeout(stopTimer);
    }
    stopTimer = setTimeout((function(_this) {
      return function() {
        initScrollPoint();
        lastLeft = $(_this).scrollLeft();
        lastTop = $(_this).scrollTop();
        clearTimeout(stopTimer);
        return stopTimer = null;
      };
    })(this), 100);
    distX = x - lastLeft;
    distY = y - lastTop;
    lastLeft = x;
    lastTop = y;
    console.log('distX:' + distX + ' distY:' + distY);
    return timeLine.handleScrollEvent(distX, distY);
  });
  return scrollFinished = function() {};
};

$(function() {
  initCommonVar();
  initView();
  initScrollPoint();
  initTimeline();
  return initScroll();
});

//# sourceMappingURL=look_around.js.js.map
