// Generated by CoffeeScript 1.9.2
var GalleryCommon;

GalleryCommon = (function() {
  function GalleryCommon() {}

  GalleryCommon.initView = function() {
    this.initCommonVar();
    return this.initResize();
  };

  GalleryCommon.initCommonVar = function() {
    window.mainGalleryWrapper = $('#main_gallery_wrapper');
    window.galleryContentsWrapper = $('#gallery_contents_wrapper');
    return window.gridWrapper = $('#grid_wrapper');
  };

  GalleryCommon.initGridView = function(callback) {
    var grid;
    if (callback == null) {
      callback = null;
    }
    grid = new Masonry('#grid_wrapper', {
      itemSelector: '.grid_contents_wrapper',
      columnWidth: 180,
      isAnimated: true,
      animationOptions: {
        duration: 400
      },
      isFitWidth: true
    });
    grid.on('layoutComplete', (function(_this) {
      return function() {
        return _this.showAllGrid();
      };
    })(this));
    return grid.layout();
  };

  GalleryCommon.initResize = function() {
    return $(window).resize(function() {
      return GalleryCommon.resizeMainContainerEvent();
    });
  };

  GalleryCommon.resizeMainContainerEvent = function() {};

  GalleryCommon.showAllGrid = function() {
    return $('#grid_wrapper').find('.grid_contents_wrapper').css('opacity', '');
  };

  GalleryCommon.showWithFullScreen = function() {
    var e, height, left, root, size, target, top, width;
    e = event;
    e.preventDefault();
    e.stopPropagation();
    root = $(e.target);
    target = "_runwindow";
    width = root.find("." + constant.Gallery.Key.SCREEN_SIZE_WIDTH).val();
    height = root.find("." + constant.Gallery.Key.SCREEN_SIZE_HEIGHT).val();
    if ((width != null) && (height != null)) {
      size = {
        width: width,
        height: height
      };
      left = Number((window.screen.width - size.width) / 2);
      top = Number((window.screen.height - size.height) / 2);
      window.open("about:blank", target, "top=" + top + ",left=" + left + ",width=" + size.width + ",height=" + size.height + ",menubar=no,toolbar=no,location=no,status=no,resizable=no,scrollbars=no");
    } else {
      window.open("about:blank", target, "menubar=no,toolbar=no,location=no,status=no,resizable=no,scrollbars=no");
    }
    document.send_form.action = '/gallery/detail/w/' + root.find("." + constant.Gallery.Key.GALLERY_ACCESS_TOKEN).val();
    document.send_form.target = target;
    return setTimeout(function() {
      return document.send_form.submit();
    }, 200);
  };

  GalleryCommon.addBookmark = function(note, callback) {
    var data;
    if (callback == null) {
      callback = null;
    }
    data = {};
    data[constant.Gallery.Key.GALLERY_ACCESS_TOKEN] = Common.getContentsAccessTokenFromUrl();
    data[constant.Gallery.Key.NOTE] = note;
    return $.ajax({
      url: "/gallery/add_bookmark",
      type: "POST",
      dataType: "json",
      data: data,
      success: function(data) {
        if (data.resultSuccess) {
          if (callback != null) {
            return callback(true);
          }
        } else {
          console.log('/project/remove server error');
          Common.ajaxError(data);
          if (callback != null) {
            return callback(false);
          }
        }
      },
      error: function(data) {
        console.log('/project/remove ajax error');
        Common.ajaxError(data);
        if (callback != null) {
          return callback(false);
        }
      }
    });
  };

  GalleryCommon.removeBookmark = function(callback) {
    var data;
    if (callback == null) {
      callback = null;
    }
    data = {};
    data[constant.Gallery.Key.GALLERY_ACCESS_TOKEN] = Common.getContentsAccessTokenFromUrl();
    return $.ajax({
      url: "/gallery/remove_bookmark",
      type: "POST",
      dataType: "json",
      data: data,
      success: function(data) {
        if (data.resultSuccess) {
          if (callback != null) {
            return callback(true);
          }
        } else {
          console.log('/project/remove server error');
          Common.ajaxError(data);
          if (callback != null) {
            return callback(false);
          }
        }
      },
      error: function(data) {
        console.log('/project/remove ajax error');
        Common.ajaxError(data);
        if (callback != null) {
          return callback(false);
        }
      }
    });
  };

  return GalleryCommon;

})();

//# sourceMappingURL=gallery_common.js.map
