// Generated by CoffeeScript 1.9.2
var PreloadItemImage,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

PreloadItemImage = (function(superClass) {
  extend(PreloadItemImage, superClass);

  PreloadItemImage.IDENTITY = "image";

  PreloadItemImage.ITEM_ACCESS_TOKEN = 'PreloadItemImage';

  PreloadItemImage.actionProperties = {
    modifiables: {
      imagePath: {
        name: "Select image",
        type: 'select_file',
        ja: {
          name: "画像を選択"
        }
      }
    }
  };

  function PreloadItemImage(cood) {
    if (cood == null) {
      cood = null;
    }
    PreloadItemImage.__super__.constructor.call(this);
    this.imagePath = null;
    this.isKeepAspect = false;
    this.scale = {
      w: 1.0,
      h: 1.0
    };
  }

  PreloadItemImage.prototype.reDraw = function(show) {
    if (show == null) {
      show = true;
    }
    PreloadItemImage.__super__.reDraw.call(this, show);
    this.clearDraw();
    return this.createItemElement((function(_this) {
      return function(createdElement) {
        $(createdElement).appendTo(window.scrollInside);
        if (!show) {
          _this.getJQueryElement().css('opacity', 0);
        }
        if (_this.setupDragAndResizeEvents != null) {
          return _this.setupDragAndResizeEvents();
        }
      };
    })(this));
  };

  PreloadItemImage.prototype.createItemElement = function(callback) {
    var contents;
    if (this.imagePath != null) {
      contents = "<img src='" + this.imagePath + "' />";
      return callback(Common.wrapCreateItemElement(this, contents));
    } else {
      return ConfigMenu.loadConfig(ConfigMenu.Action.PRELOAD_IMAGE_PATH_SELECT, function(config) {
        var left, style, top;
        style = '';
        top = this.itemSize.h - $(config).height() / 2.0;
        left = this.itemSize.w - $(config).width() / 2.0;
        contents = "<div style='position:absolute;top:" + top + "px;left:" + left + "px;'>" + config + "</div>";
        return callback(Common.wrapCreateItemElement(this, contents));
      });
    }
  };

  return PreloadItemImage;

})(ItemBase);

if ((window.itemInitFuncList != null) && (window.itemInitFuncList[PreloadItemImage.ITEM_ACCESS_TOKEN] == null)) {
  if (typeof EventConfig !== "undefined" && EventConfig !== null) {
    EventConfig.addEventConfigContents(PreloadItemImage.ITEM_ACCESS_TOKEN);
  }
  console.log('button loaded');
}

//# sourceMappingURL=pi_image.js.map
