// Generated by CoffeeScript 1.9.2
var LocalStorage;

LocalStorage = (function() {
  function LocalStorage() {}

  LocalStorage.Key = (function() {
    function Key() {}

    Key.WORKTABLE_PAGEVALUES = 'worktable_pagevalues';

    Key.WORKTABLE_EVENT_PAGEVALUES = 'worktable_event_pagevalues';

    Key.WORKTABLE_SETTING_PAGEVALUES = 'worktable_setting_pagevalues';

    Key.RUN_PAGEVALUES = 'run_pagevalues';

    Key.RUN_EVENT_PAGEVALUES = 'run_event_pagevalues';

    Key.RUN_SETTING_PAGEVALUES = 'run_setting_pagevalues';

    Key.WORKTABLE_SAVETIME = 'worktable_time';

    Key.RUN_SAVETIME = 'run_time';

    return Key;

  })();

  LocalStorage.WORKTABLE_SAVETIME = 5;

  LocalStorage.RUN_SAVETIME = 9999;

  LocalStorage.loadValueForWorktable = function() {
    this.loadPageValue();
    this.loadEventPageValue();
    return this.loadSettingPageValue();
  };

  LocalStorage.saveValueForRun = function() {
    this.savePageValue(true);
    this.saveEventPageValue(true);
    return this.saveSettingPageValue(true);
  };

  LocalStorage.loadValueForRun = function() {
    this.loadPageValue(true);
    this.loadEventPageValue(true);
    return this.loadSettingPageValue(true);
  };

  LocalStorage.isOverWorktableSaveTimeLimit = function(isRun) {
    var diffTime, key, lstorage, saveTime, time;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    saveTime = lstorage.getItem(key);
    if (saveTime == null) {
      return true;
    }
    diffTime = Common.diffTime($.now(), saveTime);
    time = isRun ? this.RUN_SAVETIME : this.WORKTABLE_SAVETIME;
    return parseInt(diffTime.minutes) > time;
  };

  LocalStorage.clearWorktable = function() {
    var lstorage;
    lstorage = localStorage;
    lstorage.removeItem(this.Key.WORKTABLE_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_EVENT_PAGEVALUES);
    return lstorage.removeItem(this.Key.WORKTABLE_SETTING_PAGEVALUES);
  };

  LocalStorage.savePageValue = function(isRun) {
    var h, key, lstorage;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    h = PageValue.getInstancePageValue(PageValue.Key.INSTANCE_PREFIX);
    key = isRun ? this.Key.RUN_PAGEVALUES : this.Key.WORKTABLE_PAGEVALUES;
    lstorage.setItem(key, JSON.stringify(h));
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    return lstorage.setItem(key, $.now());
  };

  LocalStorage.loadPageValue = function(isRun) {
    var h, k, key, lstorage, results, v;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_PAGEVALUES : this.Key.WORKTABLE_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    results = [];
    for (k in h) {
      v = h[k];
      results.push(PageValue.setInstancePageValue(PageValue.Key.INSTANCE_PREFIX + PageValue.Key.PAGE_VALUES_SEPERATOR + k, v));
    }
    return results;
  };

  LocalStorage.saveEventPageValue = function(isRun) {
    var h, key, lstorage;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    h = PageValue.getEventPageValue(PageValue.Key.E_PREFIX);
    key = isRun ? this.Key.RUN_EVENT_PAGEVALUES : this.Key.WORKTABLE_EVENT_PAGEVALUES;
    lstorage.setItem(key, JSON.stringify(h));
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    return lstorage.setItem(key, $.now());
  };

  LocalStorage.loadEventPageValue = function(isRun) {
    var h, k, key, lstorage, results, v;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_EVENT_PAGEVALUES : this.Key.WORKTABLE_EVENT_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    results = [];
    for (k in h) {
      v = h[k];
      results.push(PageValue.setEventPageValue(PageValue.Key.E_PREFIX + PageValue.Key.PAGE_VALUES_SEPERATOR + k, v));
    }
    return results;
  };

  LocalStorage.saveSettingPageValue = function(isRun) {
    var h, key, lstorage;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    h = PageValue.getSettingPageValue(Setting.PageValueKey.PREFIX);
    key = isRun ? this.Key.RUN_SETTING_PAGEVALUES : this.Key.WORKTABLE_SETTING_PAGEVALUES;
    lstorage.setItem(key, JSON.stringify(h));
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    return lstorage.setItem(key, $.now());
  };

  LocalStorage.loadSettingPageValue = function(isRun) {
    var h, k, key, lstorage, v;
    if (isRun == null) {
      isRun = false;
    }
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_SETTING_PAGEVALUES : this.Key.WORKTABLE_SETTING_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    for (k in h) {
      v = h[k];
      PageValue.setSettingPageValue(Setting.PageValueKey.PREFIX + PageValue.Key.PAGE_VALUES_SEPERATOR + k, v);
    }
    return Setting.initConfig();
  };

  return LocalStorage;

})();

//# sourceMappingURL=local_storage.js.map
