// Generated by CoffeeScript 1.9.2
var LocalStorage;

LocalStorage = (function() {
  function LocalStorage() {}

  LocalStorage.Key = (function() {
    function Key() {}

    Key.WORKTABLE_GENERAL_PAGEVALUES = 'worktable_general_pagevalues';

    Key.WORKTABLE_INSTANCE_PAGEVALUES = 'worktable_instance_pagevalues';

    Key.WORKTABLE_EVENT_PAGEVALUES = 'worktable_event_pagevalues';

    Key.WORKTABLE_SETTING_PAGEVALUES = 'worktable_setting_pagevalues';

    Key.RUN_GENERAL_PAGEVALUES = 'run_general_pagevalues';

    Key.RUN_INSTANCE_PAGEVALUES = 'run_instance_pagevalues';

    Key.RUN_EVENT_PAGEVALUES = 'run_event_pagevalues';

    Key.RUN_SETTING_PAGEVALUES = 'run_setting_pagevalues';

    Key.RUN_FOOTPRINT_PAGE_VALUES = 'run_footprint_pagevalues';

    Key.WORKTABLE_SAVETIME = 'worktable_time';

    Key.RUN_SAVETIME = 'run_time';

    return Key;

  })();

  LocalStorage.WORKTABLE_SAVETIME = 5;

  LocalStorage.RUN_SAVETIME = 9999;

  LocalStorage.saveAllPageValues = function() {
    this.saveGeneralPageValue();
    this.saveInstancePageValue();
    this.saveEventPageValue();
    return this.saveSettingPageValue();
  };

  LocalStorage.loadAllPageValues = function() {
    this.loadGeneralPageValue();
    this.loadInstancePageValue();
    this.loadEventPageValue();
    return this.loadSettingPageValue();
  };

  LocalStorage.isOverWorktableSaveTimeLimit = function() {
    var diffTime, isRun, key, lstorage, saveTime, time;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    saveTime = lstorage.getItem(key);
    if (saveTime == null) {
      return true;
    }
    diffTime = Common.calculateDiffTime($.now(), saveTime);
    time = isRun ? this.RUN_SAVETIME : this.WORKTABLE_SAVETIME;
    return parseInt(diffTime.minutes) > time;
  };

  LocalStorage.clearWorktable = function() {
    var lstorage;
    lstorage = localStorage;
    lstorage.removeItem(this.Key.WORKTABLE_GENERAL_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_INSTANCE_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_EVENT_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_SETTING_PAGEVALUES);
    return lstorage.removeItem(this.Key.WORKTABLE_SAVETIME);
  };

  LocalStorage.clearWorktableWithoutSetting = function() {
    var lstorage;
    lstorage = localStorage;
    lstorage.removeItem(this.Key.WORKTABLE_GENERAL_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_INSTANCE_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_EVENT_PAGEVALUES);
    return lstorage.removeItem(this.Key.WORKTABLE_SAVETIME);
  };

  LocalStorage.clearWorktableWithoutGeneralAndSetting = function() {
    var lstorage;
    lstorage = localStorage;
    lstorage.removeItem(this.Key.WORKTABLE_INSTANCE_PAGEVALUES);
    lstorage.removeItem(this.Key.WORKTABLE_EVENT_PAGEVALUES);
    return lstorage.removeItem(this.Key.WORKTABLE_SAVETIME);
  };

  LocalStorage.clearRun = function() {
    var lstorage;
    lstorage = localStorage;
    lstorage.removeItem(this.Key.RUN_GENERAL_PAGEVALUES);
    lstorage.removeItem(this.Key.RUN_INSTANCE_PAGEVALUES);
    lstorage.removeItem(this.Key.RUN_EVENT_PAGEVALUES);
    lstorage.removeItem(this.Key.RUN_SETTING_PAGEVALUES);
    return lstorage.removeItem(this.Key.RUN_SAVETIME);
  };

  LocalStorage.saveGeneralPageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    h = PageValue.getGeneralPageValue(PageValue.Key.G_PREFIX);
    key = isRun ? this.Key.RUN_GENERAL_PAGEVALUES : this.Key.WORKTABLE_GENERAL_PAGEVALUES;
    lstorage.setItem(key, JSON.stringify(h));
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    return lstorage.setItem(key, $.now());
  };

  LocalStorage.loadGeneralPageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_GENERAL_PAGEVALUES : this.Key.WORKTABLE_GENERAL_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    return PageValue.setGeneralPageValue(PageValue.Key.G_PREFIX, h);
  };

  LocalStorage.saveInstancePageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    h = PageValue.getInstancePageValue(PageValue.Key.INSTANCE_PREFIX);
    key = isRun ? this.Key.RUN_INSTANCE_PAGEVALUES : this.Key.WORKTABLE_INSTANCE_PAGEVALUES;
    lstorage.setItem(key, JSON.stringify(h));
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    return lstorage.setItem(key, $.now());
  };

  LocalStorage.loadInstancePageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_INSTANCE_PAGEVALUES : this.Key.WORKTABLE_INSTANCE_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    return PageValue.setInstancePageValue(PageValue.Key.INSTANCE_PREFIX, h);
  };

  LocalStorage.saveEventPageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    h = PageValue.getEventPageValue(PageValue.Key.E_SUB_ROOT);
    key = isRun ? this.Key.RUN_EVENT_PAGEVALUES : this.Key.WORKTABLE_EVENT_PAGEVALUES;
    lstorage.setItem(key, JSON.stringify(h));
    key = isRun ? this.Key.RUN_SAVETIME : this.Key.WORKTABLE_SAVETIME;
    return lstorage.setItem(key, $.now());
  };

  LocalStorage.loadEventPageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_EVENT_PAGEVALUES : this.Key.WORKTABLE_EVENT_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    return PageValue.setEventPageValueByRootHash(h);
  };

  LocalStorage.saveSettingPageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    h = PageValue.getSettingPageValue(PageValue.Key.ST_PREFIX);
    key = isRun ? this.Key.RUN_SETTING_PAGEVALUES : this.Key.WORKTABLE_SETTING_PAGEVALUES;
    return lstorage.setItem(key, JSON.stringify(h));
  };

  LocalStorage.loadSettingPageValue = function() {
    var h, isRun, key, lstorage;
    isRun = !window.isWorkTable;
    lstorage = localStorage;
    key = isRun ? this.Key.RUN_SETTING_PAGEVALUES : this.Key.WORKTABLE_SETTING_PAGEVALUES;
    h = JSON.parse(lstorage.getItem(key));
    return PageValue.setSettingPageValue(PageValue.Key.ST_PREFIX, h);
  };

  LocalStorage.saveFootprintPageValue = function() {
    var h, lstorage;
    lstorage = localStorage;
    h = PageValue.getFootprintPageValue(PageValue.Key.F_PREFIX);
    return lstorage.setItem(this.Key.RUN_FOOTPRINT_PAGE_VALUES, JSON.stringify(h));
  };

  LocalStorage.loadFootprintPageValue = function() {
    var h, lstorage;
    lstorage = localStorage;
    h = JSON.parse(lstorage.getItem(this.Key.RUN_FOOTPRINT_PAGE_VALUES));
    return PageValue.setFootprintPageValue(PageValue.Key.F_PREFIX, h);
  };

  return LocalStorage;

})();

//# sourceMappingURL=local_storage.js.map
