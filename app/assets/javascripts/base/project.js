// Generated by CoffeeScript 1.9.2
var Project;

Project = (function() {
  function Project() {}

  Project.initProjectModal = function(modalEmt, params, callback) {
    var _modalSize;
    if (callback == null) {
      callback = null;
    }
    _modalSize = function(type) {
      var height, width;
      if (type === 'new') {
        width = 424;
        height = 179;
      } else {
        width = 424;
        height = 118;
      }
      return {
        width: width,
        height: height
      };
    };
    $('.project_create_wrapper input[type=radio]', modalEmt).off('click');
    $('.project_create_wrapper input[type=radio]', modalEmt).on('click', function() {
      var size;
      $('.display_project_new_wrapper', modalEmt).css('display', $(this).val() === 'new' ? 'block' : 'none');
      $('.display_project_select_wrapper', modalEmt).css('display', $(this).val() === 'select' ? 'block' : 'none');
      size = _modalSize($(this).val());
      modalEmt.animate({
        width: size.width + "px",
        height: size.height + "px"
      }, {
        duration: 300,
        queue: false
      });
      Common.modalCentering(true, size);
      $('.button_wrapper span', modalEmt).hide();
      return $(".button_wrapper ." + ($(this).val()), modalEmt).show();
    });
    $('.display_size_wrapper input[type=radio]', modalEmt).off('click');
    $('.display_size_wrapper input[type=radio]', modalEmt).on('click', function() {
      var height;
      $('.display_size_input_wrapper', modalEmt).css('display', $(this).val() === 'input' ? 'block' : 'none');
      if ($(this).val() === 'input') {
        height = 199;
      } else {
        height = 179;
      }
      return modalEmt.animate({
        height: size.height + "px"
      }, {
        duration: 300
      });
    });
    $('.default_window_size', modalEmt).html((window.mainWrapper.width()) + " X " + (window.mainWrapper.height()));
    Project.load_data_order_last_updated(function(data) {
      var d, e, i, len, list, n, p, projectSelect, size, user_pagevalue_list;
      user_pagevalue_list = data.user_pagevalue_list;
      projectSelect = $('.project_select', modalEmt);
      if (user_pagevalue_list.length > 0) {
        list = '';
        n = $.now();
        for (i = 0, len = user_pagevalue_list.length; i < len; i++) {
          p = user_pagevalue_list[i];
          d = new Date(p['updated_at']);
          e = "<option value='" + p['id'] + "'>" + p['project_title'] + " - " + (Common.displayDiffAlmostTime(n, d.getTime())) + "</option>";
          list += e;
        }
        projectSelect.children().remove();
        $(list).appendTo(projectSelect);
        $('.project_create_wrapper input[type=radio][value=select]', modalEmt).prop('checked', true);
        $('.display_project_new_wrapper', modalEmt).hide();
        $('.display_project_select_wrapper', modalEmt).show();
        $(".button_wrapper .select", modalEmt).show();
        $('.button_wrapper span', modalEmt).hide();
        $(".button_wrapper .select", modalEmt).show();
        size = _modalSize('select');
        modalEmt.css({
          width: size.width,
          height: size.height
        });
        $('.project_create_wrapper', modalEmt).show();
        Common.modalCentering();
        if (callback != null) {
          return callback();
        }
      } else {
        projectSelect.children().remove();
        $('.project_create_wrapper input[type=radio][value=new]', modalEmt).prop('checked', true);
        $('.display_project_new_wrapper', modalEmt).show();
        $('.display_project_select_wrapper', modalEmt).hide();
        $(".button_wrapper .new", modalEmt).show();
        $('.button_wrapper span', modalEmt).hide();
        $(".button_wrapper .new", modalEmt).show();
        size = _modalSize('new');
        modalEmt.css({
          width: size.width,
          height: size.height
        });
        $('.project_create_wrapper', modalEmt).hide();
        Common.modalCentering();
        if (callback != null) {
          return callback();
        }
      }
    });
    $('.create_button', modalEmt).off('click');
    $('.create_button', modalEmt).on('click', function() {
      var height, projectName, width;
      projectName = $('.project_name').val();
      width = $('#screen_wrapper').width();
      height = $('#screen_wrapper').height();
      if ((projectName == null) || projectName.length === 0) {
        return;
      }
      if ($('.display_size_wrapper input[value=input]').is(':checked')) {
        width = $('.display_size_input_width', modalEmt).val();
        height = $('.display_size_input_height', modalEmt).val();
        if ((width == null) || width.length === 0 || (height == null) || height.length === 0) {
          return;
        }
      }
      Project.initProjectValue(projectName, width, height);
      Common.setTitle(projectName);
      Common.applyEnvironmentFromPagevalue();
      return Project.create(projectName, width, height, function(data) {
        Navbar.setLastUpdateTime(data.updated_at);
        window.initDone = true;
        return Common.hideModalView();
      });
    });
    $('.open_button', modalEmt).off('click');
    $('.open_button', modalEmt).on('click', function() {
      var user_pagevalue_id;
      user_pagevalue_id = $('.project_select', modalEmt).val();
      return ServerStorage.load(user_pagevalue_id, function(data) {
        var sectionClass;
        Navbar.setLastUpdateTime(data.updated_at);
        Common.applyEnvironmentFromPagevalue();
        sectionClass = Constant.Paging.MAIN_PAGING_SECTION_CLASS.replace('@pagenum', PageValue.getPageNum());
        $('#pages .section:first').attr('class', sectionClass + " section");
        $('#pages .section:first').css({
          'backgroundColor': Constant.DEFAULT_BACKGROUNDCOLOR,
          'z-index': Common.plusPagingZindex(0, PageValue.getPageNum())
        });
        $(window.drawingCanvas).css('z-index', Common.plusPagingZindex(Constant.Zindex.EVENTFLOAT));
        window.scrollInsideWrapper.css('z-index', Common.plusPagingZindex(Constant.Zindex.EVENTBOTTOM + 1));
        window.initDone = true;
        return Common.hideModalView();
      });
    });
    $('.back_button', modalEmt).off('click');
    return $('.back_button', modalEmt).on('click', function() {
      return window.location.href = '/';
    });
  };

  Project.load_data_order_last_updated = function(successCallback, errorCallback) {
    if (successCallback == null) {
      successCallback = null;
    }
    if (errorCallback == null) {
      errorCallback = null;
    }
    return $.ajax({
      url: "/page_value_state/user_pagevalue_last_updated_list",
      type: "GET",
      dataType: "json",
      success: function(data) {
        if (data.resultSuccess) {
          if (successCallback != null) {
            return successCallback(data);
          }
        } else {
          if (errorCallback != null) {
            errorCallback();
          }
          return console.log('/page_value_state/user_pagevalue_last_updated_list server error');
        }
      },
      error: function(data) {
        if (errorCallback != null) {
          errorCallback();
        }
        return console.log('/page_value_state/user_pagevalue_last_updated_list ajax error');
      }
    });
  };

  Project.create = function(title, screenWidth, screenHeight, callback) {
    var data;
    if (callback == null) {
      callback = null;
    }
    data = {};
    data[Constant.Project.Key.TITLE] = title;
    data[Constant.Project.Key.SCREEN_SIZE] = {
      width: screenWidth,
      height: screenHeight
    };
    return $.ajax({
      url: "/project/create",
      type: "POST",
      data: data,
      dataType: "json",
      success: function(data) {
        if (data.resultSuccess) {
          PageValue.setGeneralPageValue(PageValue.Key.PROJECT_ID, data.project_id);
          if (callback != null) {
            return callback(data);
          }
        } else {
          return console.log('project/create server error');
        }
      },
      error: function(data) {
        return console.log('project/create ajax error');
      }
    });
  };

  Project.initProjectValue = function(name, width, height) {
    PageValue.setGeneralPageValue(PageValue.Key.PROJECT_NAME, name);
    return PageValue.setGeneralPageValue(PageValue.Key.SCREEN_SIZE, {
      width: parseInt(width),
      height: parseInt(height)
    });
  };

  Project.initAdminProjectModal = function(modalEmt, params, callback) {
    var _deleteEvent, _editEvent, _loadAdminMenu;
    if (callback == null) {
      callback = null;
    }
    _loadAdminMenu = function(callback) {
      return $.ajax({
        url: "/project/admin_menu",
        type: "GET",
        dataType: "json",
        success: function(data) {
          if (data.resultSuccess) {
            return callback(data.admin_html);
          } else {
            return console.log('/project/admin_menu server error');
          }
        },
        error: function(data) {
          return console.log('/project/admin_menu ajax error');
        }
      });
    };
    _editEvent = function(callback) {
      return $.ajax({
        url: "/project/get_project_by_user_pagevalue_id",
        type: "POST",
        dataType: "json",
        success: function(data) {
          if (data.resultSuccess) {
            return callback(data.project);
          } else {
            return console.log('/project/get_project_by_user_pagevalue_id server error');
          }
        },
        error: function(data) {
          return console.log('/project/get_project_by_user_pagevalue_id ajax error');
        }
      });
    };
    _deleteEvent = function(callback) {
      return $.ajax({
        url: "/project/remove",
        type: "POST",
        dataType: "json",
        success: function(data) {
          if (data.resultSuccess) {
            return callback(data.admin_html);
          } else {
            return console.log('/project/remove server error');
          }
        },
        error: function(data) {
          return console.log('/project/remove ajax error');
        }
      });
    };
    return _loadAdminMenu.call(this, function(admin_html) {
      modalEmt.find('.am_list:first').html(admin_html);
      modalEmt.find('.am_row .edit_button').off('click').on('click', (function(_this) {
        return function(e) {
          return _editEvent(function(project) {});
        };
      })(this));
      return modalEmt.find('.am_row .remove_button').off('click').on('click', (function(_this) {
        return function(e) {
          if (window.confirm(I18n.t('message.dialog.delete_project'))) {
            return _deleteEvent(function(admin_html) {
              return modalEmt.find('.am_list:first').empty().html(admin_html);
            });
          }
        };
      })(this));
    });
  };

  return Project;

})();

//# sourceMappingURL=project.js.map
