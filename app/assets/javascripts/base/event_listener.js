// Generated by CoffeeScript 1.9.2
var CommonEventListener, EventListener, ItemEventListener;

EventListener = {
  initListener: function(timelineEvent) {},
  setEvents: function(sEventFuncName, cEventFuncName) {
    var clickEventFunc;
    if ((sEventFuncName != null) && (this.constructor.prototype[sEventFuncName] != null)) {
      this.scrollEvent = this.constructor.prototype[sEventFuncName];
    }
    if ((cEventFuncName != null) && (this.constructor.prototype[cEventFuncName] != null)) {
      clickEventFunc = this.constructor.prototype[cEventFuncName];
      return this.getJQueryElement().on('click', (function(_this) {
        return function(e) {
          return clickEventFunc.call(_this, e);
        };
      })(this));
    }
  },
  reset: function() {},
  getJQueryElement: function() {},
  nextChapter: function() {
    if (window.timeLine != null) {
      return window.timeLine.nextChapter();
    }
  }
};

CommonEventListener = {
  initListener: function(timelineEvent) {}
};

ItemEventListener = {
  initListener: function(itemChange) {
    var cEvent, miniObj, sEvent;
    miniObj = itemChange[TLEItemChange.minObj];
    this.setMiniumObject(miniObj);
    this.itemSize = miniObj.itemSize;
    if (this.reDraw != null) {
      this.reDraw(false);
    }
    sEvent = null;
    cEvent = null;
    if (itemChange[TimelineEvent.PageValueKey.ACTIONTYPE] === Constant.ActionEventHandleType.SCROLL) {
      sEvent = itemChange[TimelineEvent.PageValueKey.METHODNAME];
    } else {
      cEvent = itemChange[TimelineEvent.PageValueKey.METHODNAME];
    }
    this.setEvents(sEvent, cEvent);
    return this.delay = null;
  },
  setMiniumObject: function(obj) {}
};

//# sourceMappingURL=event_listener.js.map
