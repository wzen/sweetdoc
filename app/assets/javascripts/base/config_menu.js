// Generated by CoffeeScript 1.9.2
var ConfigMenu;

ConfigMenu = (function() {
  var constant;

  function ConfigMenu() {}

  if (typeof gon !== "undefined" && gon !== null) {
    constant = gon["const"];
    ConfigMenu.ROOT_ID = constant.ConfigMenu.ROOT_ID;
    ConfigMenu.Action = (function() {
      function Action() {}

      Action.PRELOAD_IMAGE_PATH_SELECT = constant.ConfigMenu.Action.PRELOAD_IMAGE_PATH_SELECT;

      return Action;

    })();
  }

  ConfigMenu.getDesignConfig = function(obj, successCallback, errorCallback) {
    var designConfigRoot, itemType;
    if (successCallback == null) {
      successCallback = null;
    }
    if (errorCallback == null) {
      errorCallback = null;
    }
    designConfigRoot = $('#' + obj.getDesignConfigId());
    if ((designConfigRoot == null) || designConfigRoot.length === 0) {
      itemType = null;
      if (obj instanceof CanvasItemBase) {
        itemType = 'canvas';
      } else if (obj instanceof CssItemBase) {
        itemType = 'css';
      } else {
        itemType = 'other';
      }
      return $.ajax({
        url: "/config_menu/design_config",
        type: "POST",
        data: {
          designConfig: obj.constructor.actionProperties.designConfig,
          itemType: itemType,
          modifiables: obj.constructor.actionProperties[obj.constructor.ActionPropertiesKey.MODIFIABLE_VARS]
        },
        dataType: "json",
        success: function(data) {
          var html;
          if (data.resultSuccess) {
            designConfigRoot = $('#' + obj.getDesignConfigId());
            if ((designConfigRoot == null) || designConfigRoot.length === 0) {
              html = $(data.html).attr('id', obj.getDesignConfigId());
              $('#design-config').append(html);
              designConfigRoot = $('#' + obj.getDesignConfigId());
            }
            if (successCallback != null) {
              return successCallback(designConfigRoot);
            }
          } else {
            if (errorCallback != null) {
              errorCallback(data);
            }
            return console.log('/config_menu/design_config server error');
          }
        },
        error: function(data) {
          if (errorCallback != null) {
            errorCallback(data);
          }
          return console.log('/config_menu/design_config ajax error');
        }
      });
    } else {
      if (successCallback != null) {
        return successCallback(designConfigRoot);
      }
    }
  };

  ConfigMenu.loadEventMethodValueConfig = function(eventConfigObj, itemObjClass, successCallback, errorCallback) {
    var emt, valueClassName;
    if (successCallback == null) {
      successCallback = null;
    }
    if (errorCallback == null) {
      errorCallback = null;
    }
    if ((itemObjClass.actionProperties.methods[eventConfigObj[EventPageValueBase.PageValueKey.METHODNAME]] == null) || (itemObjClass.actionProperties.methods[eventConfigObj[EventPageValueBase.PageValueKey.METHODNAME]][itemObjClass.ActionPropertiesKey.MODIFIABLE_VARS] == null)) {
      if (successCallback != null) {
        successCallback();
      }
      return;
    }
    valueClassName = eventConfigObj.methodClassName();
    emt = $(".value_forms ." + valueClassName, eventConfigObj.emt);
    if (emt.length > 0) {
      eventConfigObj.initEventVarModifyConfig(itemObjClass);
      if (successCallback != null) {
        successCallback();
      }
      return;
    }
    return $.ajax({
      url: "/config_menu/method_values_config",
      type: "POST",
      data: {
        classDistToken: itemObjClass.CLASS_DIST_TOKEN,
        methodName: eventConfigObj[EventPageValueBase.PageValueKey.METHODNAME],
        modifiables: itemObjClass.actionProperties.methods[eventConfigObj[EventPageValueBase.PageValueKey.METHODNAME]][itemObjClass.ActionPropertiesKey.MODIFIABLE_VARS]
      },
      dataType: "json",
      success: function(data) {
        if (data.resultSuccess) {
          $(".value_forms", eventConfigObj.emt).append($("<div class='" + valueClassName + "'><div class='" + eventConfigObj.constructor.METHOD_VALUE_MODIFY_ROOT + "'>" + data.modify_html + "</div><div class='" + eventConfigObj.constructor.METHOD_VALUE_SPECIFIC_ROOT + "'>" + data.specific_html + "</div></div>"));
          eventConfigObj.initEventVarModifyConfig(itemObjClass);
          eventConfigObj.initEventSpecificConfig(itemObjClass);
          if (successCallback != null) {
            return successCallback(data);
          }
        } else {
          if (errorCallback != null) {
            errorCallback(data);
          }
          return console.log('/config_menu/method_values_config server error');
        }
      },
      error: function(data) {
        if (errorCallback != null) {
          errorCallback(data);
        }
        return console.log('/config_menu/method_values_config ajax error');
      }
    });
  };

  ConfigMenu.loadConfig = function(serverActionName, sendData, successCallback, errorCallback) {
    var emt;
    if (successCallback == null) {
      successCallback = null;
    }
    if (errorCallback == null) {
      errorCallback = null;
    }
    emt = $("#" + this.ROOT_ID + " ." + serverActionName);
    if ((emt != null) && emt.length > 0) {
      if (successCallback != null) {
        successCallback(emt.children(':first'));
      }
      return;
    }
    return $.ajax({
      url: "/config_menu/" + serverActionName,
      type: "POST",
      data: sendData,
      dataType: "json",
      success: (function(_this) {
        return function(data) {
          if (data.resultSuccess) {
            $("#" + _this.ROOT_ID).append("<div class='" + serverActionName + "'>" + data.html + "</div>");
            emt = $("#" + _this.ROOT_ID + " ." + serverActionName);
            if (successCallback != null) {
              return successCallback(emt.children(':first'));
            }
          } else {
            if (errorCallback != null) {
              errorCallback(data);
            }
            return console.log("/config_menu/" + serverActionName + " server error");
          }
        };
      })(this),
      error: function(data) {
        if (errorCallback != null) {
          errorCallback(data);
        }
        return console.log("/config_menu/" + serverActionName + " ajax error");
      }
    });
  };

  return ConfigMenu;

})();

//# sourceMappingURL=config_menu.js.map
