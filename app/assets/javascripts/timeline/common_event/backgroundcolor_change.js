// Generated by CoffeeScript 1.9.2
var TLEBackgroundColorChange,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

TLEBackgroundColorChange = (function(superClass) {
  extend(TLEBackgroundColorChange, superClass);

  function TLEBackgroundColorChange() {
    return TLEBackgroundColorChange.__super__.constructor.apply(this, arguments);
  }

  TLEBackgroundColorChange.BASE_COLOR = 'b_color';

  TLEBackgroundColorChange.CHANGE_COLOR = 'c_color';

  TLEBackgroundColorChange.initConfigValue = function(timelineConfig) {
    var bgColor;
    TLEBackgroundColorChange.__super__.constructor.initConfigValue.call(this, timelineConfig);
    bgColor = $('#main-wrapper.stage_container').css('backgroundColor');
    $(".baseColor", $("values_div", timelineConfig.emt)).css('backgroundColor', bgColor);
    return $(".colorPicker", timelineConfig.emt).each(function() {
      var self;
      self = $(this);
      if (!self.hasClass('temp') && !self.hasClass('baseColor')) {
        return initColorPicker(self, bgColor, null);
      }
    });
  };

  TLEBackgroundColorChange.writeToPageValue = function(timelineConfig) {
    var emt, errorMes, value, writeValue;
    errorMes = "";
    writeValue = TLEBackgroundColorChange.__super__.constructor.writeToPageValue.call(this, timelineConfig);
    emt = timelineConfig.emt;
    value = {};
    value[this.BASE_COLOR] = $('.base_color:first', emt).css('backgroundColor');
    value[this.CHANGE_COLOR] = $('.change_color:first', emt).css('backgroundColor');
    if (value[this.BASE_COLOR] === value[this.CHANGE_COLOR]) {
      errorMes = "同じ色は選択できません";
    }
    if (errorMes.length === 0) {
      writeValue[this.PageValueKey.VALUE] = value;
      setTimelinePageValue(this.PageValueKey.te(timelineConfig.teNum), writeValue, timelineConfig.teNum);
      setTimelinePageValue(Constant.PageValueKey.TE_COUNT, timelineConfig.teNum);
    }
    return errorMes;
  };

  TLEBackgroundColorChange.readFromPageValue = function(timelineConfig) {
    var emt, ret, value, writeValue;
    ret = TLEBackgroundColorChange.__super__.constructor.readFromPageValue.call(this, timelineConfig);
    if (!ret) {
      return false;
    }
    emt = timelineConfig.emt;
    writeValue = getTimelinePageValue(this.PageValueKey.te(timelineConfig.teNum));
    value = writeValue[this.PageValueKey.VALUE];
    initColorPicker($(".colorPicker.base_color", emt), value[this.BASE_COLOR], null);
    initColorPicker($(".colorPicker.change_color", emt), value[this.CHANGE_COLOR], null);
    return true;
  };

  return TLEBackgroundColorChange;

})(TimelineEvent);

//# sourceMappingURL=backgroundcolor_change.js.map
