// Generated by CoffeeScript 1.9.2
var Navbar;

Navbar = (function() {
  function Navbar() {}

  Navbar.NAVBAR_ROOT = constant.ElementAttribute.NAVBAR_ROOT;

  Navbar.ITEM_MENU_PREFIX = 'menu-item-';

  Navbar.initWorktableNavbar = function() {
    var etcMenuEmt, fileMenuEmt, itemsSelectMenuEmt;
    fileMenuEmt = $('#header_items_file_menu .dropdown-menu > li');
    $('.menu-newcreate', fileMenuEmt).off('click');
    $('.menu-newcreate', fileMenuEmt).on('click', function() {
      if (Object.keys(window.instanceMap).length > 0 || PageValue.getPageCount() >= 2) {
        if (window.confirm(I18n.t('message.dialog.new_project'))) {
          WorktableCommon.recreateMainContainer();
          return Common.showModalView(Constant.ModalViewType.INIT_PROJECT, WorktableCommon.initProjectModal, false);
        }
      }
    });
    $('.menu-load', fileMenuEmt).off('mouseenter');
    $('.menu-load', fileMenuEmt).on('mouseenter', function() {
      return Navbar.get_load_list();
    });
    $('.menu-save', fileMenuEmt).off('click');
    $('.menu-save', fileMenuEmt).on('click', function() {
      return ServerStorage.save();
    });
    $('.menu-setting', fileMenuEmt).off('click');
    $('.menu-setting', fileMenuEmt).on('click', function() {
      Sidebar.switchSidebarConfig('setting');
      Setting.initConfig();
      return Sidebar.openConfigSidebar();
    });
    etcMenuEmt = $('#header_etc_select_menu .dropdown-menu > li');
    $('.menu-about', etcMenuEmt).off('click');
    $('.menu-about', etcMenuEmt).on('click', function() {
      return Common.showModalView(Constant.ModalViewType.ABOUT);
    });
    itemsSelectMenuEmt = $('#header_items_select_menu .dropdown-menu > li');
    $('.menu-item', itemsSelectMenuEmt).click(function() {
      var emtId, itemId;
      WorktableCommon.reDrawAllInstanceItemIfChanging();
      emtId = $(this).attr('id');
      if (emtId.indexOf(Navbar.ITEM_MENU_PREFIX) >= 0) {
        itemId = parseInt(emtId.replace(Navbar.ITEM_MENU_PREFIX, ''));
        itemsSelectMenuEmt.removeClass('active');
        $(this).parent('li').addClass('active');
        window.selectItemMenu = itemId;
        WorktableCommon.changeMode(Constant.Mode.DRAW);
        return Common.loadItemJs(itemId);
      }
    });
    $('#header_items_select_menu .menu-item').click(function() {
      var selected;
      selected = $(this).html();
      return $('#header_items_selected_menu_span').html(selected);
    });
    return $('#menu-action-edit').click(function() {
      return WorktableCommon.changeMode(Constant.Mode.EDIT);
    });
  };

  Navbar.initRunNavbar = function() {
    var navEmt;
    navEmt = $('#nav');
    $('.menu-control-rewind-page', navEmt).off('click');
    $('.menu-control-rewind-page', navEmt).on('click', function() {
      if (window.eventAction != null) {
        return window.eventAction.thisPage().rewindAllChapters();
      }
    });
    $('.menu-control-rewind-chapter', navEmt).off('click');
    $('.menu-control-rewind-chapter', navEmt).on('click', function() {
      if (window.eventAction != null) {
        return window.eventAction.thisPage().rewindChapter();
      }
    });
    $('.menu-control-rewind-upload-gallery', navEmt).off('click');
    return $('.menu-control-rewind-upload-gallery', navEmt).on('click', function() {
      return RunCommon.showUploadGalleryConfirm();
    });
  };

  Navbar.setTitle = function(title_name) {
    if (!window.isWorkTable) {
      title_name += '(Preview)';
    }
    $("#" + Navbar.NAVBAR_ROOT).find('.nav_title').html(title_name);
    return document.title = title_name + '| Revolver';
  };

  Navbar.setPageNum = function(value) {
    var e, navEmt;
    navEmt = $('#nav');
    e = $('.nav_page_num', navEmt);
    if (e != null) {
      return e.html(value);
    } else {
      return e.html('');
    }
  };

  Navbar.setChapterNum = function(value) {
    var e, navEmt;
    navEmt = $('#nav');
    e = $('.nav_chapter_num', navEmt);
    if (e != null) {
      return e.html(value);
    } else {
      return e.html('');
    }
  };

  Navbar.setPageMax = function(page_max) {
    var e, navEmt;
    navEmt = $('#nav');
    e = $('.nav_page_max', navEmt);
    if (e != null) {
      return e.html(page_max);
    } else {
      return e.html('');
    }
  };

  Navbar.setChapterMax = function(chapter_max) {
    var e, navEmt;
    navEmt = $('#nav');
    e = $('.nav_chapter_max', navEmt);
    if (e != null) {
      return e.html(chapter_max);
    } else {
      return e.html('');
    }
  };

  Navbar.setForkNum = function(num) {
    var e, navEmt;
    navEmt = $('#nav');
    e = $('.nav_fork_num', navEmt);
    if (e != null) {
      e.html(num);
      return e.closest('li').css('display', num > 0 ? 'block' : 'none');
    } else {
      e.html('');
      return e.closest('li').css('display', 'none');
    }
  };

  Navbar.get_load_list = function() {
    var diffTime, loadEmt, loadedLocalTime, s, updateFlg;
    loadEmt = $("#" + Navbar.NAVBAR_ROOT).find("." + this.ElementAttribute.FILE_LOAD_CLASS);
    updateFlg = loadEmt.find("." + this.ElementAttribute.LOAD_LIST_UPDATED_FLG).length > 0;
    if (updateFlg) {
      loadedLocalTime = loadEmt.find("." + this.ElementAttribute.LOADED_LOCALTIME);
      if (loadedLocalTime != null) {
        diffTime = Common.calculateDiffTime($.now(), parseInt(loadedLocalTime.val()));
        s = diffTime.seconds;
        if (window.debug) {
          console.log('loadedLocalTime diff ' + s);
        }
        if (parseInt(s) <= this.LOAD_LIST_INTERVAL_SECONDS) {
          return;
        }
      }
    }
    loadEmt.children().remove();
    $("<li><a class='menu-item'>Loading...</a></li>").appendTo(loadEmt);
    return ServerStorage.get_load_data(function(data) {
      var d, e, i, len, list, n, p, user_pagevalue_list;
      user_pagevalue_list = data;
      if (user_pagevalue_list.length > 0) {
        list = '';
        n = $.now();
        for (i = 0, len = user_pagevalue_list.length; i < len; i++) {
          p = user_pagevalue_list[i];
          d = new Date(p.updated_at);
          e = "<li><a class='menu-item'>" + (Common.displayDiffAlmostTime(n, d.getTime())) + " (" + (Common.formatDate(d)) + ")</a><input type='hidden' class='user_pagevalue_id' value=" + p.user_pagevalue_id + "></li>";
          list += e;
        }
        loadEmt.children().remove();
        $(list).appendTo(loadEmt);
        loadEmt.find('li').click(function(e) {
          var user_pagevalue_id;
          user_pagevalue_id = $(this).find('.user_pagevalue_id:first').val();
          return ServerStorage.load(user_pagevalue_id);
        });
        loadEmt.find("." + ServerStorage.ElementAttribute.LOAD_LIST_UPDATED_FLG).remove();
        loadEmt.find("." + ServerStorage.ElementAttribute.LOADED_LOCALTIME).remove();
        $("<input type='hidden' class=" + ServerStorage.ElementAttribute.LOAD_LIST_UPDATED_FLG + " value='1'>").appendTo(loadEmt);
        return $("<input type='hidden' class=" + ServerStorage.ElementAttribute.LOADED_LOCALTIME + " value=" + ($.now()) + ">").appendTo(loadEmt);
      } else {
        loadEmt.children().remove();
        return $("<li><a class='menu-item'>No Data</a></li>").appendTo(loadEmt);
      }
    }, function() {
      if (window.debug) {
        console.log(data.responseText);
      }
      loadEmt.children().remove();
      return $("<li><a class='menu-item'>Server Access Error</a></li>").appendTo(loadEmt);
    });
  };

  return Navbar;

})();

//# sourceMappingURL=navbar.js.map
