// Generated by CoffeeScript 1.9.2
var OperationHistory;

OperationHistory = (function() {
  var _pop, _popRedo;

  function OperationHistory() {}

  OperationHistory.OPERATION_STORE_MAX = 30;

  OperationHistory.Key = (function() {
    function Key() {}

    Key.INSTANCE = 'iv';

    Key.EVENT = 'ev';

    return Key;

  })();

  OperationHistory.operationHistoryIndex = function() {
    var forkNum, pageNum;
    pageNum = PageValue.getPageNum();
    forkNum = PageValue.getForkNum();
    return pageNum + '-' + forkNum;
  };

  OperationHistory.add = function(isInit) {
    if (isInit == null) {
      isInit = false;
    }
  };

  _pop = function() {
    var hIndex, obj;
    if (window.operationHistoryIndexes[this.operationHistoryIndex()] == null) {
      return false;
    }
    hIndex = window.operationHistoryIndexes[this.operationHistoryIndex()];
    if (hIndex <= 0) {
      hIndex = this.OPERATION_STORE_MAX - 1;
    } else {
      hIndex -= 1;
    }
    if ((window.operationHistories[this.operationHistoryIndex()] != null) && (window.operationHistories[this.operationHistoryIndex()][hIndex] != null)) {
      obj = window.operationHistories[this.operationHistoryIndex()][hIndex];
      WorktableCommon.removeAllItemAndEventOnThisPage((function(_this) {
        return function() {
          var eventPageValue, instancePageValue;
          instancePageValue = obj[_this.Key.INSTANCE];
          eventPageValue = obj[_this.Key.EVENT];
          if (instancePageValue != null) {
            PageValue.setInstancePageValue(PageValue.Key.instancePagePrefix(), instancePageValue);
          }
          if (eventPageValue != null) {
            PageValue.setEventPageValueByPageRootHash(eventPageValue);
          }
          window.operationHistoryIndexes[_this.operationHistoryIndex()] = hIndex;
          PageValue.adjustInstanceAndEventOnPage();
          window.lStorage.saveAllPageValues();
          WorktableCommon.createAllInstanceAndDrawFromInstancePageValue();
          return Timeline.refreshAllTimeline();
        };
      })(this));
      return true;
    } else {
      return false;
    }
  };

  _popRedo = function() {
    var hIndex, obj;
    if (window.operationHistoryIndexes[this.operationHistoryIndex()] == null) {
      return false;
    }
    hIndex = (window.operationHistoryIndexes[this.operationHistoryIndex()] + 1) % this.OPERATION_STORE_MAX;
    if ((window.operationHistories[this.operationHistoryIndex()] != null) && (window.operationHistories[this.operationHistoryIndex()][hIndex] != null)) {
      obj = window.operationHistories[this.operationHistoryIndex()][hIndex];
      WorktableCommon.removeAllItemAndEventOnThisPage((function(_this) {
        return function() {
          var eventPageValue, instancePageValue;
          instancePageValue = obj[_this.Key.INSTANCE];
          eventPageValue = obj[_this.Key.EVENT];
          if (instancePageValue != null) {
            PageValue.setInstancePageValue(PageValue.Key.instancePagePrefix(), instancePageValue);
          }
          if (eventPageValue != null) {
            PageValue.setEventPageValueByPageRootHash(eventPageValue);
          }
          window.operationHistoryIndexes[_this.operationHistoryIndex()] = hIndex;
          PageValue.adjustInstanceAndEventOnPage();
          window.lStorage.saveAllPageValues();
          WorktableCommon.createAllInstanceAndDrawFromInstancePageValue();
          return Timeline.refreshAllTimeline();
        };
      })(this));
      return true;
    } else {
      return false;
    }
  };

  OperationHistory.undo = function() {};

  OperationHistory.redo = function() {};

  return OperationHistory;

})();

//# sourceMappingURL=history.js.map
