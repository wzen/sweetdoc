// Generated by CoffeeScript 1.9.2
var OperationHistory;

OperationHistory = (function() {
  var _pop, _popRedo;

  function OperationHistory() {}

  OperationHistory.Key = (function() {
    function Key() {}

    Key.INSTANCE = 'iv';

    Key.EVENT = 'ev';

    return Key;

  })();

  OperationHistory.add = function(isInit) {
    var obj;
    if (isInit == null) {
      isInit = false;
    }
    if ((window.operationHistoryIndex != null) && !isInit) {
      window.operationHistoryIndex = (window.operationHistoryIndex + 1) % window.operationHistoryLimit;
    } else {
      window.operationHistoryIndex = 0;
    }
    window.operationHistoryTailIndex = window.operationHistoryIndex;
    obj = {};
    obj[this.Key.INSTANCE] = PageValue.getInstancePageValue(PageValue.Key.instancePagePrefix());
    obj[this.Key.EVENT] = PageValue.getEventPageValue(PageValue.Key.eventPagePrefix());
    return window.operationHistory[window.operationHistoryIndex] = obj;
  };

  _pop = function() {
    var eventPageValue, hIndex, instancePageValue, obj;
    hIndex = window.operationHistoryIndex;
    if (hIndex <= 0) {
      hIndex = window.operationHistoryLimit - 1;
    } else {
      hIndex -= 1;
    }
    obj = window.operationHistory[hIndex];
    if (obj != null) {
      WorktableCommon.removeAllItemAndEvent();
      instancePageValue = obj[this.Key.INSTANCE];
      eventPageValue = obj[this.Key.EVENT];
      if (instancePageValue != null) {
        PageValue.setInstancePageValue(PageValue.Key.instancePagePrefix(), instancePageValue);
      }
      if (eventPageValue != null) {
        PageValue.setEventPageValueByRootHash(eventPageValue);
      }
      window.operationHistoryIndex = hIndex;
      PageValue.adjustInstanceAndEvent();
      LocalStorage.saveEventPageValue();
      WorktableCommon.drawAllItemFromEventPageValue();
      return true;
    } else {
      return false;
    }
  };

  _popRedo = function() {
    var eventPageValue, hIndex, instancePageValue, obj;
    hIndex = (window.operationHistoryIndex + 1) % window.operationHistoryLimit;
    obj = window.operationHistory[hIndex];
    if (obj != null) {
      WorktableCommon.removeAllItemAndEvent();
      instancePageValue = obj[this.Key.INSTANCE];
      eventPageValue = obj[this.Key.EVENT];
      if (instancePageValue != null) {
        PageValue.setInstancePageValue(PageValue.Key.instancePagePrefix(), instancePageValue);
      }
      if (eventPageValue != null) {
        PageValue.setEventPageValueByRootHash(eventPageValue);
      }
      window.operationHistoryIndex = hIndex;
      PageValue.adjustInstanceAndEvent();
      LocalStorage.saveEventPageValue();
      WorktableCommon.drawAllItemFromEventPageValue();
      return true;
    } else {
      return false;
    }
  };

  OperationHistory.undo = function() {
    var nextTailIndex;
    nextTailIndex = (window.operationHistoryTailIndex + 1) % window.operationHistoryLimit;
    if (nextTailIndex === window.operationHistoryIndex || !_pop.call(this)) {
      Message.flushWarn("Can't Undo");
    }
  };

  OperationHistory.redo = function() {
    if (window.operationHistoryTailIndex === window.operationHistoryIndex || !_popRedo.call(this)) {
      Message.flushWarn("Can't Redo");
    }
  };

  return OperationHistory;

})();

//# sourceMappingURL=history.js.map
