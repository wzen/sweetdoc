// Generated by CoffeeScript 1.9.2
var changeTimelineColor, createTimelineEvent, getActionTypeClassNameByActionType, setupTimeLineCss, setupTimelineEventConfig, updateSelectItemMenu;

createTimelineEvent = function(teNum) {
  var emts, exist, newEmt, pEmt;
  emts = $('#timeline_events .timeline_event .te_num');
  exist = false;
  emts.each(function(e) {
    if (parseInt($(this).val()) === teNum) {
      return exist = true;
    }
  });
  if (exist) {
    return;
  }
  pEmt = $('#timeline_events');
  newEmt = $('.timeline_event_temp', pEmt).children(':first').clone(true);
  $("<input class='te_num' type='hidden' value='" + teNum + "' >").appendTo(newEmt);
  return pEmt.append(newEmt);
};

setupTimelineEventConfig = function() {
  var _clickTimelineEvent, _setupTimelineEvent, self, te;
  self = this;
  te = null;

  /* private method ここから */
  _setupTimelineEvent = function() {
    var tEmt;
    tEmt = $('#timeline_events .timeline_event .te_num');
    return tEmt.each(function(e) {
      var actionType, teNum;
      teNum = parseInt($(this).val());
      actionType = getTimelinePageValue(TimelineEvent.PageValueKey.te(teNum) + Constant.PageValueKey.PAGE_VALUES_SEPERATOR + TimelineEvent.PageValueKey.ACTIONTYPE);
      changeTimelineColor(teNum, actionType);
      if (e === tEmt.length - 1 && actionType !== null) {
        return createTimelineEvent(tEmt.length + 1);
      }
    });
  };
  _clickTimelineEvent = function(e) {
    var eId, emt, te_num;
    if ($(e).is('.ui-sortable-helper')) {
      return;
    }
    clearSelectedBorder();
    setSelectedBorder(e, "timeline");
    switchSidebarConfig("timeline");
    te_num = $(e).find('input.te_num').val();
    eId = TimelineConfig.ITEM_ROOT_ID.replace('@te_num', te_num);
    emt = $('#' + eId);
    if (emt.length === 0) {
      emt = $('#timeline-config .timeline_temp .event').clone(true).attr('id', eId);
      $('#timeline-config').append(emt);
    }
    updateSelectItemMenu();
    te = new TimelineConfig(emt, e, te_num);
    (function(_this) {
      return (function() {
        var em;
        em = $('.te_item_select', emt);
        em.off('change');
        em.on('change', function(e) {
          return te.selectItem(this);
        });
        em = $('.action_forms input[name="method"]:radio', emt);
        em.off('change');
        em.on('change', function(e) {
          return te.clickMethod(this);
        });
        em = $('.push.button.reset', emt);
        em.off('click');
        em.on('click', function(e) {
          return te.resetAction();
        });
        em = $('.push.button.apply', emt);
        em.off('click');
        em.on('click', function(e) {
          te.applyAction();
          return setupTimelineEventConfig();
        });
        em = $('.push.button.cancel', emt);
        em.off('click');
        return em.on('click', function(e) {
          emt = $(this).closest('.event');
          $('.values', emt).html('');
          return closeSidebar(function() {
            return $(".config.te_div", emt).css('display', 'none');
          });
        });
      });
    })(this)();
    $('#timeline-config .event').css('display', 'none');
    emt.css('display', '');
    if (!isOpenedConfigSidebar()) {
      return openConfigSidebar();
    }
  };

  /* private method ここまで */
  _setupTimelineEvent.call(self);
  $('.timeline_event').off('click');
  $('.timeline_event').on('click', function(e) {
    return _clickTimelineEvent.call(self, this);
  });
  return $('#timeline_events').sortable({
    revert: true,
    axis: 'x',
    containment: $('#timeline_events_container'),
    items: '.sortable',
    stop: function(event, ui) {}
  });
};

updateSelectItemMenu = function() {
  var items, selectOptions, teItemSelect, teItemSelects;
  teItemSelects = $('#timeline-config .te_item_select');
  teItemSelect = teItemSelects[0];
  selectOptions = '';
  items = $("#" + Constant.PageValueKey.PV_ROOT + " .item");
  items.children().each(function() {
    var id, itemId, name;
    id = $(this).find('input.id').val();
    name = $(this).find('input.name').val();
    itemId = $(this).find('input.itemId').val();
    return selectOptions += "<option value='" + id + Constant.TIMELINE_ITEM_SEPERATOR + itemId + "'>\n  " + name + "\n</option>";
  });
  return teItemSelects.each(function() {
    $(this).find('option').each(function() {
      if ($(this).val().length > 0 && $(this).val().indexOf(Constant.TIMELINE_COMMON_PREFIX) !== 0) {
        return $(this).remove();
      }
    });
    return $(this).append($(selectOptions));
  });
};

setupTimeLineCss = function() {
  var itemCssStyle;
  itemCssStyle = "";
  $('#css_code_info').find('.css-style').each(function() {
    return itemCssStyle += $(this).html();
  });
  itemObjectList.forEach(function(item) {
    if ((typeof ButtonItem !== "undefined" && ButtonItem !== null) && item instanceof ButtonItem) {
      return itemCssStyle += ButtonItem.dentButton(item);
    }
  });
  if (itemCssStyle.length > 0) {
    return setTimelinePageValue(Constant.PageValueKey.TE_CSS, itemCssStyle);
  }
};

getActionTypeClassNameByActionType = function(actionType) {
  if (parseInt(actionType) === Constant.ActionEventHandleType.CLICK) {
    return Constant.ActionEventTypeClassName.CLICK;
  } else if (parseInt(actionType) === Constant.ActionEventHandleType.SCROLL) {
    return Constant.ActionEventTypeClassName.SCROLL;
  }
  return null;
};

changeTimelineColor = function(teNum, actionType) {
  var k, ref, teEmt, v;
  if (actionType == null) {
    actionType = null;
  }
  teEmt = null;
  $('#timeline_events').children('.timeline_event').each(function(e) {
    if (parseInt($(this).find('input.te_num:first').val()) === parseInt(teNum)) {
      return teEmt = this;
    }
  });
  ref = Constant.ActionEventTypeClassName;
  for (k in ref) {
    v = ref[k];
    $(teEmt).removeClass(v);
  }
  if (actionType != null) {
    return $(teEmt).addClass(getActionTypeClassNameByActionType(actionType));
  } else {
    return $(teEmt).addClass(Constant.ActionEventTypeClassName.BLANK);
  }
};

//# sourceMappingURL=timeline.js.map
