// Generated by CoffeeScript 1.9.2
var EventDragPointing;

EventDragPointing = (function() {
  var instance;

  instance = null;

  function EventDragPointing(cood) {
    if (cood == null) {
      cood = null;
    }
    return this.constructor.getInstance(cood);
  }

  EventDragPointing.PrivateClass = (function() {
    function PrivateClass() {}

    PrivateClass.prototype.setDrawEndCallback = function(callback) {
      return this.drawEndCallback = callback;
    };

    PrivateClass.prototype.startCood = function(cood) {
      if (cood != null) {
        this._moveLoc = {
          x: cood.x,
          y: cood.y
        };
      }
      return this.itemSize = null;
    };

    PrivateClass.prototype.draw = function(cood) {
      this.itemSize = {
        x: null,
        y: null,
        w: null,
        h: null
      };
      this.itemSize.w = Math.abs(cood.x - this._moveLoc.x);
      this.itemSize.h = Math.abs(cood.y - this._moveLoc.y);
      if (cood.x > this._moveLoc.x) {
        this.itemSize.x = this._moveLoc.x;
      } else {
        this.itemSize.x = cood.x;
      }
      if (cood.y > this._moveLoc.y) {
        this.itemSize.y = this._moveLoc.y;
      } else {
        this.itemSize.y = cood.y;
      }
      return drawingContext.strokeRect(this.itemSize.x, this.itemSize.y, this.itemSize.w, this.itemSize.h);
    };

    PrivateClass.prototype.endDraw = function() {
      if (this.drawEndCallback != null) {
        return this.drawEndCallback(this.itemSize);
      }
    };

    return PrivateClass;

  })();

  EventDragPointing.getInstance = function(cood) {
    if (cood == null) {
      cood = null;
    }
    if (instance == null) {
      instance = new this.PrivateClass();
    }
    instance.startCood(cood);
    return instance;
  };

  EventDragPointing.prototype.mouseDownDrawing = function(callback) {
    if (callback == null) {
      callback = null;
    }
  };

  EventDragPointing.prototype.mouseUpDrawing = function(zindex, callback) {
    if (callback == null) {
      callback = null;
    }
    return this.endDraw(zindex);
  };

  EventDragPointing.prototype.draw = function(cood) {
    return instance.draw(cood);
  };

  EventDragPointing.prototype.endDraw = function(zindex, show, callback) {
    if (show == null) {
      show = true;
    }
    if (callback == null) {
      callback = null;
    }
    return instance.endDraw();
  };

  return EventDragPointing;

})();

//# sourceMappingURL=event_drag_pointing.js.map
