// Generated by CoffeeScript 1.9.2
var BackgroundEvent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BackgroundEvent = (function(superClass) {
  extend(BackgroundEvent, superClass);

  function BackgroundEvent() {
    return BackgroundEvent.__super__.constructor.apply(this, arguments);
  }

  BackgroundEvent.EVENT_ID = '1';

  BackgroundEvent.prototype.willChapter = function(methodName) {
    var b, bColor, bColors, c, cColor, cColors, cf, colorPerHeight, color_max, g, i, j, r, ref, results, rgb, scrollEnd, scrollStart, style, styles;
    if (methodName === 'changeBackgroundColor') {
      this.scrollEvents = [];
      bColor = this.timelineEvent[TLEBackgroundColorChange.BASE_COLOR];
      cColor = this.timelineEvent[TLEBackgroundColorChange.CHANGE_COLOR];
      scrollStart = parseInt(this.timelineEvent[TimelineEvent.PageValueKey.SCROLL_POINT_START]);
      scrollEnd = parseInt(this.timelineEvent[TimelineEvent.PageValueKey.SCROLL_POINT_END]);
      bColors = bColor.replace('rgb', '').replace('(', '').replace(')', '').split(',');
      cColors = cColor.replace('rgb', '').replace('(', '').replace(')', '').split(',');
      color_max = 256 * 3;
      colorPerHeight = color_max / scrollViewHeight;
      c = 0;
      results = [];
      for (i = j = 0, ref = scrollEnd - scrollStart; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
        styles = [];
        c += colorPerHeight;
        cf = Math.floor(c);
        r = parseInt(cf / 3);
        g = parseInt((cf + 1) / 3);
        b = parseInt((cf + 2) / 3);
        rgb = "rgb(" + r + "," + g + "," + b + ")";
        style = {
          name: "background-color",
          param: rgb
        };
        styles.push(style);
        results.push(this.scrollEvents[i] = styles);
      }
      return results;
    }
  };

  BackgroundEvent.prototype.changeBackgroundColor = function(scrollValue) {};

  return BackgroundEvent;

})(CommonEvent);

setClassToMap(true, BackgroundEvent.EVENT_ID, BackgroundEvent);

//# sourceMappingURL=background_event.js.map
