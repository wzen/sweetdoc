// Generated by CoffeeScript 1.9.2
var BackgroundEvent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BackgroundEvent = (function(superClass) {
  extend(BackgroundEvent, superClass);

  function BackgroundEvent() {
    return BackgroundEvent.__super__.constructor.apply(this, arguments);
  }

  BackgroundEvent.EVENT_ID = '1';

  BackgroundEvent.prototype.initEvent = function(event) {
    var afterColor, beforeColor, className, methodName, scrollEnd, scrollStart, section;
    BackgroundEvent.__super__.initEvent.call(this, event);
    methodName = this.getEventMethodName();
    if (methodName === 'changeBackgroundColor') {
      beforeColor = this.event[EventPageValueBase.PageValueKey.VALUE][EPVBackgroundColor.BASE_COLOR];
      afterColor = this.event[EventPageValueBase.PageValueKey.VALUE][EPVBackgroundColor.CHANGE_COLOR];
      scrollStart = parseInt(this.event[EventPageValueBase.PageValueKey.SCROLL_POINT_START]);
      scrollEnd = parseInt(this.event[EventPageValueBase.PageValueKey.SCROLL_POINT_END]);
      this.scrollEvents = Common.colorChangeCacheData(beforeColor, afterColor, scrollEnd - scrollStart);
      className = Constant.Paging.MAIN_PAGING_SECTION_CLASS.replace('@pagenum', PageValue.getPageNum());
      section = $("#" + Constant.Paging.ROOT_ID).find("." + className + ":first");
      return this.targetBackground = section;
    }
  };

  BackgroundEvent.prototype.updateEventBefore = function() {
    var bColor, methodName;
    methodName = this.getEventMethodName();
    if (methodName === 'changeBackgroundColor') {
      bColor = this.event[EventPageValueBase.PageValueKey.VALUE][EPVBackgroundColor.BASE_COLOR];
      return this.targetBackground.css('backgroundColor', bColor);
    }
  };

  BackgroundEvent.prototype.updateEventAfter = function() {
    var cColor, methodName;
    methodName = this.getEventMethodName();
    if (methodName === 'changeBackgroundColor') {
      cColor = this.event[EventPageValueBase.PageValueKey.VALUE][EPVBackgroundColor.CHANGE_COLOR];
      return this.targetBackground.css('backgroundColor', cColor);
    }
  };

  BackgroundEvent.prototype.changeBackgroundColor = function(scrollValue) {
    return this.targetBackground.css('backgroundColor', this.scrollEvents[scrollValue]);
  };

  return BackgroundEvent;

})(CommonEvent);

Common.setClassToMap(true, BackgroundEvent.EVENT_ID, BackgroundEvent);

//# sourceMappingURL=background_event.js.map
