// Generated by CoffeeScript 1.9.2
var BackgroundEvent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

BackgroundEvent = (function(superClass) {
  extend(BackgroundEvent, superClass);

  function BackgroundEvent() {
    return BackgroundEvent.__super__.constructor.apply(this, arguments);
  }

  BackgroundEvent.EVENT_ID = '1';

  BackgroundEvent.actionProperties = {
    defaultMethod: 'changeBackgroundColor',
    modifiables: {
      backgroundColor: {
        name: "Background Color",
        "default": 'transparent',
        type: 'color',
        colorType: 'rgb',
        ja: {
          name: "背景色"
        }
      }
    },
    methods: {
      changeBackgroundColor: {
        actionType: 'scroll',
        options: {
          id: 'changeColorClick_Design',
          name: 'Changing color by click',
          ja: {
            name: 'クリックで色変更'
          }
        },
        modifiables: {
          backgroundColor: {
            name: "Background Color",
            type: 'color',
            varAutoChange: true,
            ja: {
              name: "背景色"
            }
          }
        }
      }
    }
  };

  BackgroundEvent.prototype.initEvent = function(event) {
    var className, section;
    BackgroundEvent.__super__.initEvent.call(this, event);
    className = Constant.Paging.MAIN_PAGING_SECTION_CLASS.replace('@pagenum', PageValue.getPageNum());
    section = $("#" + Constant.Paging.ROOT_ID).find(".scroll_inside:first");
    return this.targetBackground = section;
  };

  BackgroundEvent.prototype.updateEventBefore = function() {
    var methodName;
    BackgroundEvent.__super__.updateEventBefore.call(this);
    methodName = this.getEventMethodName();
    if (methodName === 'changeBackgroundColor') {
      return this.targetBackground.css('backgroundColor', "" + this.backgroundColor);
    }
  };

  BackgroundEvent.prototype.updateEventAfter = function() {
    var methodName;
    BackgroundEvent.__super__.updateEventAfter.call(this);
    methodName = this.getEventMethodName();
    if (methodName === 'changeBackgroundColor') {
      return this.targetBackground.css('backgroundColor', "" + this.backgroundColor);
    }
  };

  BackgroundEvent.prototype.changeBackgroundColor = function(opt) {
    return this.targetBackground.css('backgroundColor', "" + this.backgroundColor);
  };

  return BackgroundEvent;

})(CommonEvent);

Common.setClassToMap(true, BackgroundEvent.EVENT_ID, BackgroundEvent);

//# sourceMappingURL=background_event.js.map
