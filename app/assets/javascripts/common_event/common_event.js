// Generated by CoffeeScript 1.9.2
var CommonEvent,
  extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

CommonEvent = (function() {
  CommonEvent.instance = null;

  function CommonEvent() {
    return this.constructor.getInstance();
  }

  CommonEvent.PrivateClass = (function(superClass) {
    extend(PrivateClass, superClass);

    PrivateClass.ID_PREFIX = "c";

    PrivateClass.actionProperties = null;

    function PrivateClass() {
      PrivateClass.__super__.constructor.call(this);
      this.id = this.constructor.ID_PREFIX + this.constructor.EVENT_ID + Common.generateId();
      this.eventId = this.constructor.EVENT_ID;
      this.classDistToken = this.constructor.CLASS_DIST_TOKEN;
    }

    PrivateClass.prototype.getJQueryElement = function() {
      return $('#common_event_click_overlay');
    };

    PrivateClass.prototype.clickTargetElement = function() {
      return $('#common_event_click_overlay');
    };

    PrivateClass.prototype.willChapter = function(callback) {
      var z_index;
      if (callback == null) {
        callback = null;
      }
      if (this._event[EventPageValueBase.PageValueKey.ACTIONTYPE] === constant.ActionType.CLICK) {
        z_index = Common.plusPagingZindex(constant.Zindex.EVENTFLOAT);
        if ($('#common_event_click_overlay').length === 0) {
          $('body').append("<div id='common_event_click_overlay' style='z-index:" + z_index + "'></div>");
        }
      }
      return PrivateClass.__super__.willChapter.call(this, callback);
    };

    PrivateClass.prototype.didChapter = function(callback) {
      if (callback == null) {
        callback = null;
      }
      if (this._event[EventPageValueBase.PageValueKey.ACTIONTYPE] === constant.ActionType.CLICK) {
        $('#common_event_click_overlay').remove();
      }
      return PrivateClass.__super__.didChapter.call(this, callback);
    };

    return PrivateClass;

  })(CommonEventBase);

  CommonEvent.getInstance = function() {
    if (this.instance[PageValue.getPageNum()] == null) {
      this.instance[PageValue.getPageNum()] = new this.PrivateClass();
    }
    return this.instance[PageValue.getPageNum()];
  };

  CommonEvent.hasInstanceCache = function(pn) {
    if (pn == null) {
      pn = PageValue.getPageNum();
    }
    return this.instance[pn] != null;
  };

  CommonEvent.deleteInstance = function(objId) {
    var k, ref, results, v;
    ref = this.instance;
    results = [];
    for (k in ref) {
      v = ref[k];
      if (v.id === objId) {
        results.push(delete this.instance[k]);
      } else {
        results.push(void 0);
      }
    }
    return results;
  };

  CommonEvent.deleteAllInstance = function() {
    var k, ref, v;
    ref = this.instance;
    for (k in ref) {
      v = ref[k];
      delete this.instance[k];
    }
    return this.instance = {};
  };

  CommonEvent.deleteInstanceOnPage = function(pageNum) {
    var i, p, ref, ref1;
    for (p = i = ref = pageNum, ref1 = PageValue.getPageCount(); ref <= ref1 ? i < ref1 : i > ref1; p = ref <= ref1 ? ++i : --i) {
      this.instance[p] = this.instance[p + 1];
    }
    return delete this.instance[PageValue.getPageCount()];
  };

  CommonEvent.CLASS_DIST_TOKEN = CommonEvent.PrivateClass.CLASS_DIST_TOKEN;

  return CommonEvent;

})();

//# sourceMappingURL=common_event.js.map
