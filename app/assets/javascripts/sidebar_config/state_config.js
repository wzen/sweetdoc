// Generated by CoffeeScript 1.9.2
var StateConfig;

StateConfig = (function() {
  var constant;

  function StateConfig() {}

  if (typeof gon !== "undefined" && gon !== null) {
    constant = gon["const"];
    StateConfig.ROOT_ID_NAME = constant.StateConfig.ROOT_ID_NAME;
  }

  StateConfig.initConfig = function() {
    (function(_this) {
      return (function() {
        var be, emt;
        emt = $("#" + _this.ROOT_ID_NAME + " .configBox.background");
        be = new BackgroundEvent();
        return ColorPickerUtil.initColorPicker(emt.find('.colorPicker:first'), be.backgroundColor, function(a, b, d, e) {
          be = new BackgroundEvent();
          return be.backgroundColor = "#" + b;
        });
      });
    })(this)();
    return (function(_this) {
      return function() {
        var _updateConfigInput, emt, se;
        emt = $("#" + _this.ROOT_ID_NAME + " .configBox.screen_event");
        se = new ScreenEvent();
        $('.initConfigX:first', emt).val(se.initConfigX);
        $('.initConfigY:first', emt).val(se.initConfigY);
        $('.initConfigScale:first', emt).val(se.initConfigScale);
        $('input', emt).off('change').on('change', function(e) {
          se = new ScreenEvent();
          se[$(e.target).attr('class')] = $(e.target).val();
          return se.setItemAllPropToPageValue();
        });
        _updateConfigInput = function(emt, pointingSize) {
          var screenSize, x, y, z;
          x = pointingSize.x + pointingSize.w / 2.0;
          y = pointingSize.y + pointingSize.h / 2.0;
          z = null;
          screenSize = PageValue.getGeneralPageValue(PageValue.Key.SCREEN_SIZE);
          if (pointingSize.w > pointingSize.h) {
            z = screenSize.width / pointingSize.w;
          } else {
            z = screenSize.height / pointingSize.h;
          }
          emt.find('.initConfigX:first').val(x);
          emt.find('.initConfigY:first').val(y);
          emt.find('.initConfigScale:first').val(z);
          se = new ScreenEvent();
          se.initConfigX = x;
          se.initConfigY = y;
          se.initConfigScale = z;
          return se.setItemAllPropToPageValue();
        };
        return emt.find('.event_pointing:first').eventDragPointingRect(function(pointingSize) {
          return _updateConfigInput.call(_this, emt, pointingSize);
        });
      };
    })(this)();
  };

  return StateConfig;

})();

//# sourceMappingURL=state_config.js.map
